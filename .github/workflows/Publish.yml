name: 📦 Publish

on:
  pull_request:
    types:
      - closed
    branches:
      - main
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  PAT: ${{ secrets.PAT }}

jobs:
  Publish:
    name: 🚀 Publish
    if: github.repository_owner == 'guotingchao' &&  github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.head_ref == 'changeset-release/main'
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout
        id: checkout
        uses: actions/checkout@v4
        with:
          token: ${{ env.GITHUB_TOKEN }}
      - name: echo if condition
        run: |
          echo ${{ github.repository_owner }}
          echo ${{ github.event_name }}
          echo ${{ github.event.pull_request.merged }}
          echo ${{ github.head_ref }}
          echo ${{ github.ref }}
          echo ${{ github.ref_name }}
      - name: 🟢 Setup node
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: 🥡 Setup pnpm
        id: setup-pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
          run_install: false

      - name: 🎈 Get pnpm store directory
        id: get-pnpm-cache-dir
        run: echo "pnpm_cache_dir=$(pnpm store path)" >> "$GITHUB_OUTPUT"

      - name: 🔆 Cache pnpm modules
        uses: actions/cache@v4
        id: pnpm-cache
        with:
          path: ${{ steps.get-pnpm-cache-dir.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 🧩 Install Dependencies
        id: install-dependencies
        run: pnpm install

      - name: 🏗️ Build
        id: build-the-library
        run: |
          pnpm build

      - name: 📣 Create Release Pull Request and Publish new version to Npm
        id: changesets
        uses: changesets/action@v1.4.7
        with:
          publish: pnpm run publish:release
        env:
          GITHUB_TOKEN: ${{ env.PAT }}
          NPM_TOKEN: ${{ env.NPM_TOKEN }}

      - name: 🎺 Publish new version to Github Packages
        id: publish
        uses: JS-DevTools/npm-publish@v3
        with:
          token: ${{ env.PAT }}
          registry: "https://npm.pkg.github.com"

      - if: ${{ steps.publish.outputs.type }}
        run: echo "Version changed!"
